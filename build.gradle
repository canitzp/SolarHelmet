plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.5-SNAPSHOT" apply false
}

architectury {
    minecraft = rootProject.mc_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.mc_version}"
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${rootProject.parchment_mc_version}:${rootProject.parchment_mapping_version}@zip")
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"

    archivesBaseName = project.mod_name
    version = project.mod_version
    //group = project.maven_group

    repositories {
        maven {
            name = "ParchmentMC"
            url = 'https://maven.parchmentmc.org'
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}

/*modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "7wz7J5gy"
    versionNumber = "${project.mod_version}"
    versionName = "${project.mod_name} - ${project.mod_version} (for ${project.release_minecraft_versions})"
    versionType = "release"
    uploadFile = jar
    gameVersions = project.release_minecraft_versions.split("/").collect()
    loaders = project.release_mod_loaders.toLowerCase().split("/").collect()
    changelog = String.join("\n", rootProject.file("CHANGELOG.md").text.lines().takeWhile(s -> !s.isEmpty()).toList())
    syncBodyFrom = rootProject.file("README.md").text
    //debugMode = true
}

tasks.modrinth.dependsOn(tasks.modrinthSyncBody)

//noinspection UnnecessaryQualifiedReference
task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    group = "publishing"
    apiToken = System.getenv('CURSEFORGE_TOKEN')

    def mainFile = upload(355361, jar)
    mainFile.displayName = "${project.mod_name} - ${project.mod_version} (for ${project.release_minecraft_versions})"
    mainFile.releaseType = "release"
    mainFile.changelogType = 'markdown'
    mainFile.changelog = file("CHANGELOG.md")
    for (final def modloader in "${project.release_mod_loaders}".split("/")) {
        mainFile.addModLoader("${modloader}")
    }
    for (final def java_version in "${project.release_java_versions}".split("/")) {
        mainFile.addJavaVersion("${java_version}")
    }
    for (final def minecraft_version in "${project.release_minecraft_versions}".split("/")) {
        mainFile.addGameVersion("${minecraft_version}")
    }
    //debugMode = true
}*/